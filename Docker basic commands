## Docker basic commands
https://labs.play-with-docker.com/

Docker Basic Commands
Step by Step for Beginners
Basic
: docker version
: docker -v
: docker info
: docker --help
: docker login
————————————
Images
: docker images
: docker pull
: docker rmi
————————————
Containers
: docker ps
: docker run
: docker start
: docker stop
————————————
System
: docker stats
: docker system df
: docker system prune

References - 
https://hub.docker.com/
https://docs.docker.com/engine/refere...

HELPFUL TIPS
You can visit - https://get.docker.com/
for more installation related help

To install docker from binaries
https://docs.docker.com/engine/instal...

Installation steps for amazon ec2
http://docs.aws.amazon.com/AmazonECS/...

FREE tutorials - https://automationstepbystep.com/
Hi I am Raghav and Today we will learn :
1. What are images
2. How to pull image
3. How to run a container using an image
4. Basic Commands

TIPS & TRICKS

What are Images
Docker Images are templates used to create Docker containers
Container is a running instance of image

Where are Images Stored
Registries (e.g. docker hub)
Can be stored locally or remote

: docker images --help
: docker pull image
: docker images
: docker images -q
: docker images -f “dangling=false”
: docker images -f “dangling=false” -q

: docker run image
: docker rmi image
: docker rmi -f image

: docker inspect
: docker history imageName
#########################################
COMMANDS
: docker ps
: docker run ImageName
: docker start ContainerName/ID
: docker stop ContainerName/ID

: docker pause ContainerName/ID
: docker unpause  ContainerName/ID

: docker top ContainerName/ID
: docker stats ContainerName/ID

: docker attach ContainerName/ID

: docker kill ContainerName/ID
: docker rm ContainerName/ID

: docker history ImageName/ID

######################################
Today we will learn :
1. How to start Jenkins on Docker Container
2. Start and Stop Jenkins Container
3. How to set Jenkins home on Docker Volume and Host Machine
: docker pull jenkins
: docker run -p 8080:8080 -p 50000:50000 jenkins
: docker run --name MyJenkins -p 8080:8080 -p 50000:50000 -v /Users/madhavi/Desktop/Jenkins_Home:/var/jenkins_home jenkins
: docker run --name MyJenkins2 -p 9090:8080 -p 50000:50000 -v /Users/madhavi/Desktop/Jenkins_Home:/var/jenkins_home jenkins
: docker volume create myjenkins
: docker volume ls
: docker volume inspect myjenkins
: docker run --name MyJenkins3 -p 9090:8080 -p 50000:50000 -v myjenkins:/var/jenkins_home jenkins
: docker inspect MyJenkins3
In case you face issues like installing plugins on this Jenkins, can setup jenkins with this command:
$ docker run -u root --rm -p 8080:8080 -v /srv/jenkins-data:/var/jenkins_home   -v /var/run/docker.sock:/var/run/docker.sock   --name jenkins jenkinsci/blueocean
#####################################
Docker file

Today we will learn :
1. What is Dockerfile
2. How to create Dockerfile
3. How to build image from Dockerfile
4. Basic Commands

TIPS & TRICKS

Dockerfile : 
A text file with instructions to build image
Automation of Docker Image Creation

FROM
RUN
CMD

Step 1 : Create a file named Dockerfile

Step 2 : Add instructions in Dockerfile

Step 3 : Build dockerfile to create image

Step 4 : Run image to create container

COMMANDS
: docker build 
: docker build -t ImageName:Tag directoryOfDocekrfile

: docker run image

############################################
Docker compose
1. What | Why - Docker Compose
2. How to install
3. How to create docker compose file
4. How to use docker compose file to create services
5. Basic Commands

TIPS

Docker compose
: tool for defining & running multi-container docker applications
: use yaml files to configure application services (docker-compose.yml)
: can start all services with a single command : docker compose up
: can stop all services with a single command : docker compose down
: can scale up selected services when required

Step 1 : install docker compose
   (already installed on windows and mac with docker)
   docker-compose -v
   
   2 Ways

   1.  https://github.com/docker/compose/rel...

   2. Using PIP
    pip install -U docker-compose

Step 2 : Create docker compose file at any location on your system
   docker-compose.yml

Step 3 : Check the validity of file by command
    docker-compose config

Step 4 : Run docker-compose.yml file by command
   docker-compose up -d

Steps 5 : Bring down application by command
   docker-compose down

TIPS
How to scale services

—scale
docker-compose up -d --scale database=4